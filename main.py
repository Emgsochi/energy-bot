from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import logging

app = FastAPI()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

@app.post("/wazzup/webhook")
async def receive_message(request: Request):
    try:
        data = await request.json()
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö (–æ–∂–∏–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å)
        if not isinstance(data, dict) or not data:
            logger.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            return JSONResponse(content={"message": "No data"}, status_code=200)

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        text = data.get("text", "").strip()
        username = data.get("fromName", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").strip()
        messenger = data.get("messenger", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä").strip()

        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}, üì© –¢–µ–∫—Å—Ç: {text}, üì± –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: {messenger}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç
        answer = f"{username}, –≤–∞—à –∑–∞–ø—Ä–æ—Å ¬´{text}¬ª –ø—Ä–∏–Ω—è—Ç! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏."

        return JSONResponse(content={"reply": answer}, status_code=200)

    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        return JSONResponse(content={"error": str(e)}, status_code=500)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
