from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import JSONResponse
from extract_parameters import extract_parameters
import logging

app = FastAPI()

@app.post("/wazzup/webhook")
async def receive_webhook(request: Request):
    try:
        payload = await request.json()
    except Exception:
        raise HTTPException(status_code=400, detail="Invalid JSON payload")

    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ - –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    if isinstance(payload, list):
        data = payload[0] if payload else {}
    elif isinstance(payload, dict):
        data = payload
    else:
        raise HTTPException(status_code=400, detail="Payload must be JSON object or array")

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∏–º—è
    text = data.get("text", "")
    contact_name = data.get("contact_name", "")

    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{text}', –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {contact_name}")

    # –í—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    extracted = extract_parameters(text)
    print("üì¶ –ò–∑–≤–ª–µ—á–µ–Ω–æ:", extracted)

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–∞–π—Å –∏ GPT –æ–±—Ä–∞–±–æ—Ç–∫—É...

    return JSONResponse(content={
        "status": "ok",
        "contact": contact_name,
        "query": text,
        "params": extracted
    })
