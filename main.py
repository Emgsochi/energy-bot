import os
import logging
import openai
from fastapi import FastAPI, Request

openai.api_key = os.getenv("OPENAI_API_KEY")

app = FastAPI()
logging.basicConfig(level=logging.INFO)

PROMPT_TEMPLATE = """
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ ¬´–≠–Ω–µ—Ä–¥–∂–∏¬ª –≤ –°–æ—á–∏.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –≤–µ–∂–ª–∏–≤–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.
–û—Ç–≤–µ—á–∞–π –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –ø—Ä–µ–¥–ª–∞–≥–∞–π —Ä–µ—à–µ–Ω–∏—è, –∑–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã.
–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ ‚Äî –∑–∞–¥–∞–π —É—Ç–æ—á–Ω–µ–Ω–∏–µ.

–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: "{user_message}"
"""

@app.get("/")
def read_root():
    return {"message": "Energy Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

@app.post("/wazzup/webhook")
async def receive_message(request: Request):
    data = await request.json()
    user_message = data.get("text") or data.get("message") or ""

    logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_message}")

    prompt = PROMPT_TEMPLATE.format(user_message=user_message)

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ gpt-4 –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            messages=[{"role": "user", "content": prompt}],
            temperature=0.8
        )
        reply = response["choices"][0]["message"]["content"]
        logging.info(f"ü§ñ –û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: {reply}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        reply = "–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ."

    return {"response": reply}
