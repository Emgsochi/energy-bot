from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import logging

app = FastAPI()

logging.basicConfig(level=logging.INFO)


@app.post("/wazzup/webhook")
async def receive_message(request: Request):
    try:
        data = await request.json()
        logging.info(f"üì® –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")

        if not isinstance(data, list) or len(data) == 0:
            return JSONResponse(content={"message": "No data"}, status_code=200)

        message_data = data[0]
        text = message_data.get("text") or message_data.get("message") or ""
        username = message_data.get("username") or message_data.get("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è Telegram)", "")
        messenger = message_data.get("messenger", "")

        logging.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}, üì© –¢–µ–∫—Å—Ç: {text}, üì± –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: {messenger}")

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ GPT –∏ —Ç.–ø.
        # –ù–∞–ø—Ä–∏–º–µ—Ä:
        answer = f"{username}, –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏: '{text}'. –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!"

        return JSONResponse(content={"reply": answer}, status_code=200)

    except Exception as e:
        logging.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        return JSONResponse(content={"error": str(e)}, status_code=500)
