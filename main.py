from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import JSONResponse
import logging
import json

app = FastAPI()
logging.basicConfig(level=logging.INFO)

@app.post("/wazzup/webhook")
async def webhook(request: Request):
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
        raw_body = await request.body()
        logging.info(f"üì• RAW BODY: {raw_body.decode('utf-8')}")

        data = await request.json()
        logging.info(f"üì© PARSED JSON: {json.dumps(data, ensure_ascii=False, indent=2)}")

        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ ‚Äî –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        if isinstance(data, list):
            if not data:
                return JSONResponse({"message": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}, status_code=200)
            data = data[0]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å
        if not isinstance(data, dict):
            raise HTTPException(status_code=400, detail="–§–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å JSON-–æ–±—ä–µ–∫—Ç–æ–º")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        required_fields = ["text", "chat_id", "channel"]
        missing = [f for f in required_fields if not data.get(f)]
        if missing:
            error_msg = f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö: {', '.join(missing)}"
            logging.warning(f"‚ö†Ô∏è {error_msg}")
            return JSONResponse({"error": error_msg}, status_code=400)

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        text = data["text"]
        chat_id = data["chat_id"]
        channel = data["channel"]
        name = data.get("name", "–ì–æ—Å—Ç—å")

        # –û—Ç–≤–µ—Ç
        reply = f"{name}, –≤–∞—à –∑–∞–ø—Ä–æ—Å ¬´{text}¬ª –ø–æ–ª—É—á–µ–Ω! –ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—á—ë—Ç üéØ"
        logging.info(f"‚úÖ –û—Ç–≤–µ—Ç: {reply}")

        return JSONResponse({"reply": reply})

    except Exception as e:
        logging.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        raise HTTPException(status_code=500, detail="–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
