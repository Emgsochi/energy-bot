import os
from fastapi import FastAPI, Request
from openai import OpenAI
from oauth2client.service_account import ServiceAccountCredentials
import gspread
from extract_parameters import extract_parameters
from wazzup_webhook import send_message

app = FastAPI()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
client = OpenAI(api_key=OPENAI_API_KEY)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]

CREDENTIALS_FILE = "credentials.json"  # ‚ö†Ô∏è –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª –µ—Å—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏

creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
client_gsheets = gspread.authorize(creds)
sheet = client_gsheets.open("bot_energy").sheet1


@app.post("/wazzup/webhook")
async def receive_webhook(request: Request):
    data = await request.json()
    try:
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = data.get("message", {}).get("text", "")
        chat_id = data.get("chat", {}).get("id")

        print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {message_text}")

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
        params = extract_parameters(message_text)
        print("üß† –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:", params)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç ChatGPT
        prompt = f"""–¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ ENERGY –≤ –°–æ—á–∏. 
–ö–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: "{message_text}"

–ò—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å—Ç–∏–ª—å –∏ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç. –ï—Å–ª–∏ –∑–Ω–∞–µ—à—å —Ü–µ–Ω—É, —Å–∫–∞–∂–∏ –µ—ë. 
–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å ‚Äî –∑–∞–¥–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å.

–ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}"""

        gpt_response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "system", "content": "–¢—ã –º–µ–Ω–µ–¥–∂–µ—Ä ENERGY"},
                      {"role": "user", "content": prompt}],
            temperature=0.7
        )

        final_text = gpt_response.choices[0].message.content.strip()
        print("ü§ñ –û—Ç–≤–µ—Ç GPT:", final_text)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ –∫–ª–∏–µ–Ω—Ç—É
        send_message(chat_id=chat_id, text=final_text, bot_token=BOT_TOKEN)

        return {"status": "ok"}

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)
        return {"status": "error", "details": str(e)}
