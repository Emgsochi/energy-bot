from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import logging

app = FastAPI()

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

@app.post("/wazzup/webhook")
async def receive_message(request: Request):
    try:
        data = await request.json()
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {data}")

        # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ (—Å–ø–∏—Å–æ–∫)
        if not isinstance(data, list) or not data:
            logger.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            return JSONResponse(content={"message": "No data"}, status_code=200)

        # ‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
        message_data = data[0]

        text = message_data.get("text", "").strip()
        username = message_data.get("fromName", "–ì–æ—Å—Ç—å").strip()
        messenger = message_data.get("messenger", "unknown").lower()

        logger.info(
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} | üì© –¢–µ–∫—Å—Ç: {text[:50]}... | üì± –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: {messenger}"
        )

        answer = f"{username}, –≤–∞—à –∑–∞–ø—Ä–æ—Å ¬´{text}¬ª –ø—Ä–∏–Ω—è—Ç! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏."

        return JSONResponse(content={"reply": answer}, status_code=200)

    except Exception as e:
        logger.exception(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return JSONResponse(content={"error": "Internal Server Error"}, status_code=500)

# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
