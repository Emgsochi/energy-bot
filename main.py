import os
import json
import logging
import requests
from fastapi import FastAPI, Request
from pydantic import BaseModel
from openai import OpenAI

app = FastAPI()
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
WAZZUP_API_KEY = os.getenv("WAZZUP_API_KEY")
WAZZUP_SEND_URL = "https://api.wazzup24.com/v3/message"  # —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É —á–µ—Ä–µ–∑ Wazzup
def send_wazzup_message(chat_id: str, text: str):
    headers = {
        "Authorization": f"Bearer {WAZZUP_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "chatId": chat_id,
        "text": text,
        "type": "text"
    }
    response = requests.post(WAZZUP_SEND_URL, headers=headers, json=data)
    logging.info(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Wazzup: {response.status_code} {response.text}")
    return response


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Albato
@app.post("/wazzup/webhook")
async def receive_message(request: Request):
    body = await request.json()
    logging.info(f"üì• RAW BODY: {body}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    chat_id = body.get("chat_id")
    text = body.get("text")
    name = body.get("name", "–ì–æ—Å—Ç—å")
    channel = body.get("channel")

    if not all([chat_id, text, name, channel]):
        logging.warning("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö: text, chat_id, name, channel")
        return {"status": "missing_data"}

    # GPT: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
    response = client.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "–¢—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏. –û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, —è—Å–Ω–æ, –∫—Ä–∞—Ç–∫–æ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫."},
            {"role": "user", "content": text}
        ]
    )
    gpt_reply = response.choices[0].message.content
    logging.info(f"ü§ñ GPT –æ—Ç–≤–µ—Ç: {gpt_reply}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ Wazzup
    send_wazzup_message(chat_id, gpt_reply)

    return {"status": "ok"}
