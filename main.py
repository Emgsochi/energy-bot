from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import logging

app = FastAPI()
logging.basicConfig(level=logging.INFO)

@app.post("/wazzup/webhook")
async def webhook(request: Request):
    try:
        data = await request.json()
        logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {data}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
        if isinstance(data, list):
            if not data:
                return JSONResponse({"message": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}, status_code=200)
            data = data[0]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π
        if not isinstance(data, dict) or not data.get("text"):
            return JSONResponse({"message": "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"}, status_code=200)

        name = data.get("name", "–ö–ª–∏–µ–Ω—Ç")
        text = data.get("text")
        chat_id = data.get("chat_id")
        channel = data.get("channel")

        reply = f"{name}, –≤–∞—à –∑–∞–ø—Ä–æ—Å ¬´{text}¬ª –ø–æ–ª—É—á–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—á—ë—Ç üòâ"

        return JSONResponse({"reply": reply})
    
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        return JSONResponse({"error": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"}, status_code=500)
